query GetNodeTitleDetails($entityId: ID!, $country: Country!, $language: Language!, $episodeMaxLimit: Int, $platform: Platform! = WEB, $allowSponsoredRecommendations: SponsoredRecommendationsInput, $format: ImageFormat, $backdropProfile: BackdropProfile, $streamingChartsFilter: StreamingChartsFilter) {
	node(id: $entityId) {
	  ... on Url {
		metaDescription
		metaKeywords
		metaRobots
		metaTitle
		heading1
		heading2
		htmlContent
		__typename
	  }
	  ...TitleDetails
	  __typename
	}
  }
  
  fragment TitleDetails on Node {
	id
	__typename
	... on MovieOrShowOrSeason {
	  plexPlayerOffers: offers(
		country: $country
		platform: $platform
		filter: {packages: ["pxp"]}
	  ) {
		id
		standardWebURL
		package {
		  id
		  packageId
		  clearName
		  technicalName
		  shortName
		  __typename
		}
		__typename
	  }
	  maxOfferUpdatedAt(country: $country, platform: WEB)
	  appleOffers: offers(
		country: $country
		platform: $platform
		filter: {packages: ["atp", "itu"]}
	  ) {
		...TitleOffer
		__typename
	  }
	  disneyOffersCount: offerCount(
		country: $country
		platform: $platform
		filter: {packages: ["dnp"]}
	  )
	  starOffersCount: offerCount(
		country: $country
		platform: $platform
		filter: {packages: ["srp"]}
	  )
	  objectType
	  objectId
	  offerCount(country: $country, platform: $platform)
	  uniqueOfferCount: offerCount(
		country: $country
		platform: $platform
		filter: {bestOnly: true}
	  )
	  offers(country: $country, platform: $platform) {
		monetizationType
		elementCount
        standardWebURL
		package {
		  id
		  packageId
		  clearName
		  __typename
		}
		__typename
	  }
	  watchNowOffer(country: $country, platform: $platform) {
		id
		standardWebURL
		__typename
	  }
	  promotedBundles(country: $country, platform: $platform) {
		promotionUrl
		__typename
	  }
	  availableTo(country: $country, platform: $platform) {
		availableCountDown(country: $country)
		availableToDate
		package {
		  id
		  shortName
		  __typename
		}
		__typename
	  }
	  fallBackClips: content(country: "US", language: "en") {
		videobusterClips: clips(providers: [VIDEOBUSTER]) {
		  ...TrailerClips
		  __typename
		}
		dailymotionClips: clips(providers: [DAILYMOTION]) {
		  ...TrailerClips
		  __typename
		}
		__typename
	  }
	  content(country: $country, language: $language) {
		backdrops {
		  backdropUrl
		  __typename
		}
		fullBackdrops: backdrops(profile: S1920, format: JPG) {
		  backdropUrl
		  __typename
		}
		clips {
		  ...TrailerClips
		  __typename
		}
		videobusterClips: clips(providers: [VIDEOBUSTER]) {
		  ...TrailerClips
		  __typename
		}
		dailymotionClips: clips(providers: [DAILYMOTION]) {
		  ...TrailerClips
		  __typename
		}
		externalIds {
		  imdbId
		  __typename
		}
		fullPath
		genres {
		  shortName
		  __typename
		}
		posterUrl
		fullPosterUrl: posterUrl(profile: S718, format: JPG)
		runtime
		isReleased
		scoring {
		  imdbScore
		  imdbVotes
		  tmdbPopularity
		  tmdbScore
		  jwRating
		  __typename
		}
		shortDescription
		title
		originalReleaseYear
		originalReleaseDate
		upcomingReleases(releaseTypes: DIGITAL) {
		  releaseCountDown(country: $country)
		  releaseDate
		  label
		  package {
			id
			packageId
			shortName
			clearName
			__typename
		  }
		  __typename
		}
		... on MovieOrShowContent {
		  originalTitle
		  ageCertification
		  credits {
			role
			name
			characterName
			personId
			__typename
		  }
		  interactions {
			dislikelistAdditions
			likelistAdditions
			votesNumber
			__typename
		  }
		  productionCountries
		  __typename
		}
		... on SeasonContent {
		  seasonNumber
		  interactions {
			dislikelistAdditions
			likelistAdditions
			votesNumber
			__typename
		  }
		  __typename
		}
		__typename
	  }
	  popularityRank(country: $country) {
		rank
		trend
		trendDifference
		__typename
	  }
	  streamingCharts(country: $country, filter: $streamingChartsFilter) {
		edges {
		  streamingChartInfo {
			rank
			trend
			trendDifference
			updatedAt
			daysInTop10
			daysInTop100
			daysInTop1000
			daysInTop3
			topRank
			__typename
		  }
		  __typename
		}
		__typename
	  }
	  __typename
	}
	... on MovieOrShow {
	  watchlistEntryV2 {
		createdAt
		__typename
	  }
	  likelistEntry {
		createdAt
		__typename
	  }
	  dislikelistEntry {
		createdAt
		__typename
	  }
	  customlistEntries {
		createdAt
		genericTitleList {
		  id
		  __typename
		}
		__typename
	  }
	  similarTitlesV2(
		country: $country
		allowSponsoredRecommendations: $allowSponsoredRecommendations
	  ) {
		sponsoredAd {
		  ...SponsoredAd
		  __typename
		}
		__typename
	  }
	  __typename
	}
	... on Movie {
	  permanentAudiences
	  seenlistEntry {
		createdAt
		__typename
	  }
	  __typename
	}
	... on Show {
	  permanentAudiences
	  totalSeasonCount
	  seenState(country: $country) {
		progress
		seenEpisodeCount
		__typename
	  }
	  tvShowTrackingEntry {
		createdAt
		__typename
	  }
	  seasons(sortDirection: DESC) {
		id
		objectId
		objectType
		totalEpisodeCount
		availableTo(country: $country, platform: $platform) {
		  availableToDate
		  availableCountDown(country: $country)
		  package {
			id
			shortName
			__typename
		  }
		  __typename
		}
		content(country: $country, language: $language) {
		  posterUrl
		  seasonNumber
		  fullPath
		  title
		  upcomingReleases(releaseTypes: DIGITAL) {
			releaseDate
			releaseCountDown(country: $country)
			package {
			  id
			  shortName
			  __typename
			}
			__typename
		  }
		  isReleased
		  originalReleaseYear
		  __typename
		}
		show {
		  id
		  objectId
		  objectType
		  watchlistEntryV2 {
			createdAt
			__typename
		  }
		  content(country: $country, language: $language) {
			title
			__typename
		  }
		  __typename
		}
		__typename
	  }
	  recentEpisodes: episodes(
		sortDirection: DESC
		limit: 3
		releasedInCountry: $country
	  ) {
		...Episode
		__typename
	  }
	  __typename
	}
	... on Season {
	  totalEpisodeCount
	  episodes(limit: $episodeMaxLimit) {
		...Episode
		__typename
	  }
	  show {
		id
		objectId
		objectType
		totalSeasonCount
		customlistEntries {
		  createdAt
		  genericTitleList {
			id
			__typename
		  }
		  __typename
		}
		tvShowTrackingEntry {
		  createdAt
		  __typename
		}
		fallBackClips: content(country: "US", language: "en") {
		  videobusterClips: clips(providers: [VIDEOBUSTER]) {
			...TrailerClips
			__typename
		  }
		  dailymotionClips: clips(providers: [DAILYMOTION]) {
			...TrailerClips
			__typename
		  }
		  __typename
		}
		content(country: $country, language: $language) {
		  title
		  ageCertification
		  fullPath
		  genres {
			shortName
			__typename
		  }
		  credits {
			role
			name
			characterName
			personId
			__typename
		  }
		  productionCountries
		  externalIds {
			imdbId
			__typename
		  }
		  upcomingReleases(releaseTypes: DIGITAL) {
			releaseDate
			__typename
		  }
		  backdrops {
			backdropUrl
			__typename
		  }
		  posterUrl
		  isReleased
		  videobusterClips: clips(providers: [VIDEOBUSTER]) {
			...TrailerClips
			__typename
		  }
		  dailymotionClips: clips(providers: [DAILYMOTION]) {
			...TrailerClips
			__typename
		  }
		  __typename
		}
		seenState(country: $country) {
		  progress
		  __typename
		}
		watchlistEntryV2 {
		  createdAt
		  __typename
		}
		dislikelistEntry {
		  createdAt
		  __typename
		}
		likelistEntry {
		  createdAt
		  __typename
		}
		similarTitlesV2(
		  country: $country
		  allowSponsoredRecommendations: $allowSponsoredRecommendations
		) {
		  sponsoredAd {
			...SponsoredAd
			__typename
		  }
		  __typename
		}
		__typename
	  }
	  seenState(country: $country) {
		progress
		__typename
	  }
	  __typename
	}
  }
  
  fragment TitleOffer on Offer {
	id
	presentationType
	monetizationType
	retailPrice(language: $language)
	retailPriceValue
	currency
	lastChangeRetailPriceValue
	type
	package {
	  id
	  packageId
	  clearName
	  technicalName
	  icon(profile: S100)
	  __typename
	}
	standardWebURL
	elementCount
	availableTo
	deeplinkRoku: deeplinkURL(platform: ROKU_OS)
	subtitleLanguages
	videoTechnology
	audioTechnology
	audioLanguages
	__typename
  }
  
  fragment TrailerClips on Clip {
	sourceUrl
	externalId
	provider
	name
	__typename
  }
  
  fragment SponsoredAd on SponsoredRecommendationAd {
	bidId
	holdoutGroup
	campaign {
	  name
	  externalTrackers {
		type
		data
		__typename
	  }
	  hideRatings
	  hideDetailPageButton
	  promotionalImageUrl
	  promotionalVideo {
		url
		__typename
	  }
	  promotionalTitle
	  promotionalText
	  promotionalProviderLogo
	  watchNowLabel
	  watchNowOffer {
		standardWebURL
		presentationType
		monetizationType
		package {
		  id
		  packageId
		  shortName
		  clearName
		  icon
		  __typename
		}
		__typename
	  }
	  nodeOverrides {
		nodeId
		promotionalImageUrl
		watchNowOffer {
		  standardWebURL
		  __typename
		}
		__typename
	  }
	  node {
		nodeId: id
		__typename
		... on MovieOrShowOrSeason {
		  content(country: $country, language: $language) {
			fullPath
			posterUrl
			title
			originalReleaseYear
			scoring {
			  imdbScore
			  __typename
			}
			externalIds {
			  imdbId
			  __typename
			}
			backdrops(format: $format, profile: $backdropProfile) {
			  backdropUrl
			  __typename
			}
			isReleased
			__typename
		  }
		  objectId
		  objectType
		  offers(country: $country, platform: $platform) {
			monetizationType
			presentationType
            standardWebURL
			package {
			  id
			  packageId
			  __typename
			}
			id
			__typename
		  }
		  __typename
		}
		... on MovieOrShow {
		  watchlistEntryV2 {
			createdAt
			__typename
		  }
		  __typename
		}
		... on Show {
		  seenState(country: $country) {
			seenEpisodeCount
			__typename
		  }
		  __typename
		}
		... on Season {
		  content(country: $country, language: $language) {
			seasonNumber
			__typename
		  }
		  show {
			__typename
			id
			content(country: $country, language: $language) {
			  originalTitle
			  __typename
			}
			watchlistEntryV2 {
			  createdAt
			  __typename
			}
		  }
		  __typename
		}
		... on GenericTitleList {
		  followedlistEntry {
			createdAt
			name
			__typename
		  }
		  id
		  type
		  content(country: $country, language: $language) {
			name
			visibility
			__typename
		  }
		  titles(country: $country, first: 40) {
			totalCount
			edges {
			  cursor
			  node: nodeV2 {
				content(country: $country, language: $language) {
				  fullPath
				  posterUrl
				  title
				  originalReleaseYear
				  scoring {
					imdbScore
					__typename
				  }
				  isReleased
				  __typename
				}
				id
				objectId
				objectType
				__typename
			  }
			  __typename
			}
			__typename
		  }
		  __typename
		}
	  }
	  __typename
	}
	__typename
  }
  
  fragment Episode on Episode {
	id
	objectId
	seenlistEntry {
	  createdAt
	  __typename
	}
	content(country: $country, language: $language) {
	  title
	  shortDescription
	  episodeNumber
	  seasonNumber
	  isReleased
	  upcomingReleases {
		releaseDate
		label
		package {
		  id
		  packageId
		  __typename
		}
		__typename
	  }
	  __typename
	}
	__typename
  }