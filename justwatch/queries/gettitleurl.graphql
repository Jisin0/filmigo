
query GetURLTitleDetails($fullPath: String!, $country: Country!, $language: Language!, $episodeMaxLimit: Int, $platform: Platform! = WEB, $allowSponsoredRecommendations: SponsoredRecommendationsInput, $format: ImageFormat, $backdropProfile: BackdropProfile, $streamingChartsFilter: StreamingChartsFilter) {
  urlV2(fullPath: $fullPath) {
	id
	metaDescription
	metaKeywords
	metaRobots
	metaTitle
	heading1
	heading2
	htmlContent
	node {
	  ...TitleDetails
	  __typename
	}
	__typename
  }
}

fragment TitleDetails on Node {
  id
  __typename
  ... on MovieOrShowOrSeason {
	plexPlayerOffers: offers(country: $country, platform: $platform, filter: {packages: ["pxp"]}) {
	  id
	  standardWebURL
	  package {
		id
		packageID
		clearName
		technicalName
		shortName
		__typename
	  }
	  __typename
	}
	maxOfferUpdatedAt(country: $country, platform: WEB)
	appleOffers: offers(country: $country, platform: $platform, filter: {packages: ["atp", "itu"]}) {
	  ...TitleOffer
	  __typename
	}
	disneyOffersCount: offerCount(country: $country, platform: $platform, filter: {packages: ["dnp"]})
	starOffersCount: offerCount(country: $country, platform: $platform, filter: {packages: ["srp"]})
	objectType
	objectID
	offerCount(country: $country, platform: $platform)
	uniqueOfferCount: offerCount(country: $country, platform: $platform, filter: {bestOnly: true})
	offers(country: $country, platform: $platform) {
	  monetizationType
	  standardWebURL
	  elementCount
	  package {
		id
		packageID
		clearName
		__typename
	  }
	  __typename
	}
	watchNowOffer(country: $country, platform: $platform) {
	  id
	  standardWebURL
	  __typename
	}
	promotedBundles(country: $country, platform: $platform) {
	  promotionURL
	  __typename
	}
	availableTo(country: $country, platform: $platform) {
	  availableCountDown(country: $country)
	  availableToDate
	  package {
		id
		shortName
		__typename
	  }
	  __typename
	}
	fallBackClips: content(country: "US", language: "en") {
	  videobusterClips: clips(providers: [VIDEOBUSTER]) {
		...TrailerClips
		__typename
	  }
	  dailymotionClips: clips(providers: [DAILYMOTION]) {
		...TrailerClips
		__typename
	  }
	  __typename
	}
	content(country: $country, language: $language) {
	  backdrops {
		backdropURL
		__typename
	  }
	  fullBackdrops: backdrops(profile: S1920, format: JPG) {
		backdropURL
		__typename
	  }
	  clips {
		...TrailerClips
		__typename
	  }
	  videobusterClips: clips(providers: [VIDEOBUSTER]) {
		...TrailerClips
		__typename
	  }
	  dailymotionClips: clips(providers: [DAILYMOTION]) {
		...TrailerClips
		__typename
	  }
	  externalIDs {
		imdbID
		tmdbID
		__typename
	  }
	  fullPath
	  genres {
		shortName
		__typename
	  }
	  posterURL
	  fullPosterURL: posterURL(profile: S718, format: JPG)
	  runtime
	  isReleased
	  scoring {
		imdbScore
		imdbVotes
		tmdbPopularity
		tmdbScore
		jwRating
		__typename
	  }
	  shortDescription
	  title
	  originalReleaseYear
	  originalReleaseDate
	  upcomingReleases(releaseTypes: DIGITAL) {
		releaseCountDown(country: $country)
		releaseDate
		label
		package {
		  id
		  packageID
		  shortName
		  clearName
		  __typename
		}
		__typename
	  }
	  ... on MovieOrShowContent {
		originalTitle
		ageCertification
		credits {
		  role
		  name
		  characterName
		  personID
		  __typename
		}
		interactions {
		  dislikelistAdditions
		  likelistAdditions
		  votesNumber
		  __typename
		}
		productionCountries
		__typename
	  }
	  ... on SeasonContent {
		seasonNumber
		interactions {
		  dislikelistAdditions
		  likelistAdditions
		  votesNumber
		  __typename
		}
		__typename
	  }
	  __typename
	}
	popularityRank(country: $country) {
	  rank
	  trend
	  trendDifference
	  __typename
	}
	streamingCharts(country: $country, filter: $streamingChartsFilter) {
	  edges {
		streamingChartInfo {
		  rank
		  trend
		  trendDifference
		  updatedAt
		  daysInTop10
		  daysInTop100
		  daysInTop1000
		  daysInTop3
		  topRank
		  __typename
		}
		__typename
	  }
	  __typename
	}
	__typename
  }
  ... on MovieOrShow {
	watchlistEntryV2 {
	  createdAt
	  __typename
	}
	likelistEntry {
	  createdAt
	  __typename
	}
	dislikelistEntry {
	  createdAt
	  __typename
	}
	customlistEntries {
	  createdAt
	  genericTitleList {
		id
		__typename
	  }
	  __typename
	}
	similarTitlesV2(country: $country, allowSponsoredRecommendations: $allowSponsoredRecommendations) {
	  sponsoredAd {
		...SponsoredAd
		__typename
	  }
	  __typename
	}
	__typename
  }
  ... on Movie {
	permanentAudiences
	seenlistEntry {
	  createdAt
	  __typename
	}
	__typename
  }
  ... on Show {
	permanentAudiences
	totalSeasonCount
	seenState(country: $country) {
	  progress
	  seenEpisodeCount
	  __typename
	}
	tvShowTrackingEntry {
	  createdAt
	  __typename
	}
	seasons(sortDirection: DESC) {
	  id
	  objectID
	  objectType
	  totalEpisodeCount
	  availableTo(country: $country, platform: $platform) {
		availableToDate
		availableCountDown(country: $country)
		package {
		  id
		  shortName
		  __typename
		}
		__typename
	  }
	  content(country: $country, language: $language) {
		posterURL
		seasonNumber
		fullPath
		title
		upcomingReleases(releaseTypes: DIGITAL) {
		  releaseDate
		  releaseCountDown(country: $country)
		  package {
			id
			shortName
			__typename
		  }
		  __typename
		}
		isReleased
		originalReleaseYear
		__typename
	  }
	  show {
		id
		objectID
		objectType
		watchlistEntryV2 {
		  createdAt
		  __typename
		}
		content(country: $country, language: $language) {
		  title
		  __typename
		}
		__typename
	  }
	  __typename
	}
	recentEpisodes: episodes(sortDirection: DESC, limit: 3, releasedInCountry: $country) {
	  ...Episode
	  __typename
	}
	__typename
  }
  ... on Season {
	totalEpisodeCount
	episodes(limit: $episodeMaxLimit) {
	  ...Episode
	  __typename
	}
	show {
	  id
	  objectID
	  objectType
	  totalSeasonCount
	  customlistEntries {
		createdAt
		genericTitleList {
		  id
		  __typename
		}
		__typename
	  }
	  tvShowTrackingEntry {
		createdAt
		__typename
	  }
	  fallBackClips: content(country: "US", language: "en") {
		videobusterClips: clips(providers: [VIDEOBUSTER]) {
		  ...TrailerClips
		  __typename
		}
		dailymotionClips: clips(providers: [DAILYMOTION]) {
		  ...TrailerClips
		  __typename
		}
		__typename
	  }
	  content(country: $country, language: $language) {
		title
		ageCertification
		fullPath
		genres {
		  shortName
		  __typename
		}
		credits {
		  role
		  name
		  characterName
		  personID
		  __typename
		}
		productionCountries
		externalIDs {
		  imdbID
		  __typename
		}
		upcomingReleases(releaseTypes: DIGITAL) {
		  releaseDate
		  __typename
		}
		backdrops {
		  backdropURL
		  __typename
		}
		posterURL
		isReleased
		videobusterClips: clips(providers: [VIDEOBUSTER]) {
		  ...TrailerClips
		  __typename
		}
		dailymotionClips: clips(providers: [DAILYMOTION]) {
		  ...TrailerClips
		  __typename
		}
		__typename
	  }
	  seenState(country: $country) {
		progress
		__typename
	  }
	  watchlistEntryV2 {
		createdAt
		__typename
	  }
	  dislikelistEntry {
		createdAt
		__typename
	  }
	  likelistEntry {
		createdAt
		__typename
	  }
	  similarTitlesV2(country: $country, allowSponsoredRecommendations: $allowSponsoredRecommendations) {
		sponsoredAd {
		  ...SponsoredAd
		  __typename
		}
		__typename
	  }
	  __typename
	}
	seenState(country: $country) {
	  progress
	  __typename
	}
	__typename
  }
}

fragment TitleOffer on Offer {
  id
  presentationType
  monetizationType
  retailPrice(language: $language)
  retailPriceValue
  currency
  lastChangeRetailPriceValue
  type
  package {
	id
	packageID
	clearName
	technicalName
	icon(profile: S100)
	__typename
  }
  standardWebURL
  elementCount
  availableTo
  deeplinkRoku: deeplinkURL(platform: ROKU_OS)
  subtitleLanguages
  videoTechnology
  audioTechnology
  audioLanguages
  __typename
}

fragment TrailerClips on Clip {
  sourceURL
  externalID
  provider
  name
  __typename
}

fragment SponsoredAd on SponsoredRecommendationAd {
  bidID
  holdoutGroup
  campaign {
	name
	externalTrackers {
	  type
	  data
	  __typename
	}
	hideRatings
	hideDetailPageButton
	promotionalImageURL
	promotionalVideo {
	  url
	  __typename
	}
	promotionalTitle
	promotionalText
	promotionalProviderLogo
	watchNowLabel
	watchNowOffer {
	  standardWebURL
	  presentationType
	  monetizationType
	  package {
		id
		packageID
		shortName
		clearName
		icon
		__typename
	  }
	  __typename
	}
	nodeOverrides {
	  nodeID
	  promotionalImageURL
	  watchNowOffer {
		standardWebURL
		__typename
	  }
	  __typename
	}
	node {
	  nodeID: id
	  __typename
	  ... on MovieOrShowOrSeason {
		content(country: $country, language: $language) {
		  fullPath
		  posterURL
		  title
		  originalReleaseYear
		  scoring {
			imdbScore
			__typename
		  }
		  externalIDs {
			imdbID
			__typename
		  }
		  backdrops(format: $format, profile: $backdropProfile) {
			backdropURL
			__typename
		  }
		  isReleased
		  __typename
		}
		objectID
		objectType
		offers(country: $country, platform: $platform) {
		  monetizationType
		  presentationType
		  package {
			id
			packageID
			__typename
		  }
		  id
		  __typename
		}
		__typename
	  }
	  ... on MovieOrShow {
		watchlistEntryV2 {
		  createdAt
		  __typename
		}
		__typename
	  }
	  ... on Show {
		seenState(country: $country) {
		  seenEpisodeCount
		  __typename
		}
		__typename
	  }
	  ... on Season {
		content(country: $country, language: $language) {
		  seasonNumber
		  __typename
		}
		show {
		  __typename
		  id
		  content(country: $country, language: $language) {
			originalTitle
			__typename
		  }
		  watchlistEntryV2 {
			createdAt
			__typename
		  }
		}
		__typename
	  }
	  ... on GenericTitleList {
		followedlistEntry {
		  createdAt
		  name
		  __typename
		}
		id
		type
		content(country: $country, language: $language) {
		  name
		  visibility
		  __typename
		}
		titles(country: $country, first: 40) {
		  totalCount
		  edges {
			cursor
			node: nodeV2 {
			  content(country: $country, language: $language) {
				fullPath
				posterURL
				title
				originalReleaseYear
				scoring {
				  imdbScore
				  __typename
				}
				isReleased
				__typename
			  }
			  id
			  objectID
			  objectType
			  __typename
			}
			__typename
		  }
		  __typename
		}
		__typename
	  }
	}
	__typename
  }
  __typename
}

fragment Episode on Episode {
  id
  objectID
  seenlistEntry {
	createdAt
	__typename
  }
  content(country: $country, language: $language) {
	title
	shortDescription
	episodeNumber
	seasonNumber
	isReleased
	upcomingReleases {
	  releaseDate
	  label
	  package {
		id
		packageID
		__typename
	  }
	  __typename
	}
	__typename
  }
  __typename
}